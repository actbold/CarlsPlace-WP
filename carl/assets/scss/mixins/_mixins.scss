/*********************
BREAKPOINTS
*********************/
@mixin breakpoint($point) {
    @if $point==$large {
      @media (min-width: $large) {
        @content ;
      }
    }
    @else if $point==$medium {
      @media (max-width: $medium) {
        @content ;
      }
    }
    @else if $point==$small {
      @media (max-width: $small) {
        @content ;
      }
    }
    @else if $point==$mobile {
      @media (max-width: $mobile) {
        @content ;
      }
    }
  }
  
  
  //BACKGROUND OPACITY
  @mixin transparent-bg($color: #000, $value: 0.5) {
    $start: "rgb(";
    $end: ")";
  
    background: #{$start}red($color), green($color), unquote("#{blue($color)}#{$end}");
    background: rgba($color, $value);
  }
  
  //MATERIAL SHADOWS
  @mixin boxShadow($level: 1) {
    @if $level == 1 {
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
    }
  
    @if $level == 2 {
      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
    }
  
    @if $level == 3 {
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
    }
  
    @if $level == 4 {
      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
    }
  
    @if $level == 5 {
      box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);
    }
  }
  /// Vertically centers the element inside of its first non-static parent,
  /// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
  @mixin vertical-center {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
  }
  
  /// Horizontally centers the element inside of its first non-static parent,
  /// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
  @mixin horizontal-center {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
  }
  
  /// Absolutely centers the element inside of its first non-static parent,
  /// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
  @mixin absolute-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  
  //TARGET FIREFOX ONLY
  @mixin browser($browsers: Mozilla) {
    @each $browser in $browsers {
      html[data-browser*="#{$browser}"] & {
        @content;
      }
    }
  }
  
  